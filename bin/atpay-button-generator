#!/usr/bin/env ruby

require 'pathname'

ENV['BUNDLE_GEMFILE'] ||= File.expand_path("../../Gemfile",
  Pathname.new(__FILE__).realpath)

require 'rubygems'
require 'pry'
require 'bundler/setup'
require 'trollop'
#load Gem.bin_path('atpay_buttons', 'atpay-button-generator')
require './lib/atpay_buttons.rb'

opts = Trollop::options do
  version "atpay-button-generator v0.1"
  banner <<-USAGE
      To generate an Atpay Button, follow these steps:
      Create a text file, e.g. data.txt:

      test1@example.com,TL1UwJFXVN7e4p6+0B5N8hy4qQyqeNxVllmC663MLcMupuAWXdHJ9g8PRAnlIh+AMZBgpaIrfWStZ5/3hYi6vCAV7q6+3M6LLqxk
      test2@example.com,XKCF2E9QZPwdOSwfTQJzZC7byLt3PH8Tr1KhmLkfRHwfNJD5XbDRMrxGYOiSnfrLEKNzm9+a4r++bpUG2hNrPyYLpNgph3BXAAfC
      test3@example.com,iQOxdBV4KrFuPFgyywxytfbsD/rURrzmlADmg1QFP2VHd/kTnkXNpnp2Utv4RS0Zz2YeOloilMhljsOcRVA2YwSu9knwF1h6tNjE

      $ atpay-button-generator --title "Pay" --amount 50.00 --subject "Payment for fifty bucks" --private-key "" --public-key "" --partner-id 20 < data.txt
    USAGE
    opt :amount, "The amount a user should be charged for transactions after clicking the generated button", :default => 5.0
    opt :private_key, "The private key given to you by @Pay", :type => :string
    opt :public_key, "@Pay's public key, given to you by @Pay", :type => :string
    opt :partner_id, "The partner ID given to you by @Pay", :type => :integer
    opt :subject, "The subject of the mailto: email (the message that a user will be sending to @Pay's servers after clicking the button", :type => :string
    opt :image_url, "The URL to a small thumbnail image to be used in the button. Default: https://www.atpay.com/wp-content/themes/atpay/images/bttn_cart.png", :type => :string, :default => "https://www.atpay.com/wp-content/themes/atpay/images/bttn_cart.png"
    opt :color, "The background color of the button. Default: #6dbe45", :type => :string, :default => "#6dbe45"
    opt :title, "The title for each button", :type => :string
    opt :wrap, "Will use wrapped (with a styled div container) version of the template. Default: false", :type => :boolean, :default => false
    opt :env, "The environment you want to generate buttons for. Currently sandbox or production", :default => "sandbox"
    opt :templates, "Location of button templates. Default ./lib/atpay/button/templates", :default => "./lib/atpay/button/templates"
    opt :user_data, "Optional user data to be passed in for your use", :type => :string
    opt :input, "Input File", :default => $stdin
end

Trollop::die :amount, "must not be negative" if opts[:amount] < 0
Trollop::die :input, "must exist" unless File.exist?(opts[:input]) if opts[:input]

while !opts[:input].eof?
  data = opts[:input].readline.strip.split(',')
  options = Hash.new
  opts.each {|k, v| options[k.to_sym] = v }
  options[:email] = data[0]
  options[:token] = data[1]
  options[:env] = options[:env].to_sym
  button = AtPay::Button::Generator.new options
  $stdout.write button.generate(options)
end

